# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1]
  1 ; candles.py 100000 100 999999999
  2 ; candles.py 30 1 42
  3 ; candles.py 1 100 0 99 1
  4 ; candles.py 100000 100 3000 30 5000 40 0 42 5000 52 4300
  4 ; candles.py 100000 100 5000 10 0 12 5000 22 4300
  4 ; candles.py 100000 100 3000 68 5000 88 0 90 5000
  4 ; candles.py 99999 100 3000 30 5000 40 0 42 5000 52 4300
  4 ; candles.py 99999 100 5000 10 0 12 5000 22 4300
  4 ; candles.py 99999 100 3000 68 5000 88 0 90 5000


[Subtask 2]
  1 ; candles.py 100000 1000 999999999
  2 ; candles.py 30 1 42
  3 ; candles.py 1 1000 0 999 1
  4 ; candles.py 100000 1000 300 300 500 400 0 420 500 520 430
  4 ; candles.py 100000 1000 500 100 0 120 500 220 430
  4 ; candles.py 100000 1000 300 680 500 880 0 900 500
  4 ; candles.py 99999 1000 300 300 500 400 0 420 500 520 430
  4 ; candles.py 99999 1000 500 100 0 120 500 220 430
  4 ; candles.py 99999 1000 300 680 500 880 0 900 500


[Subtask 3]
  1 ; candles.py 100000 1000000 999999999
  2 ; candles.py 30 1 42
  3 ; candles.py 1 1000000 0 999999 1
  4 ; candles.py 100000 1000000 100 10 0 325000 2 350000 0 450000 2 475000 0 999990 100
  4 ; candles.py 100000 1000000 2 25000 0 125000 2 150000 0 699990 100 700000 0
  4 ; candles.py 100000 1000000 0 300000 100 300010 0 850000 2 875000 0 975000 2
  4 ; candles.py 99999 1000000 100 10 0 325000 2 350000 0 450000 2 475000 0 999990 100
  4 ; candles.py 99999 1000000 2 25000 0 125000 2 150000 0 699990 100 700000 0
  4 ; candles.py 99999 1000000 0 300000 100 300010 0 850000 2 875000 0 975000 2


