# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1 - validators/st1.cpp]
  1 ; steps.py 30 1 42
  2 ; steps.py 1 100 0 99 1
  2 ; steps.py 2 100 1 1 0 99 1
  3 ; steps.py 1000 100 30 30 50 40 0 42 50 52 43
  3 ; steps.py 1000 100 50 10 0 12 50 22 43
  3 ; steps.py 1000 100 30 68 50 88 0 90 50
  3 ; steps.py 999 100 30 30 50 40 0 42 50 52 43
  3 ; steps.py 999 100 50 10 0 12 50 22 43
  3 ; steps.py 999 100 30 68 50 88 0 90 50


[Subtask 2 - validators/st2.cpp]
  1 ; steps.py 30 1 42
  2 ; steps.py 1 2000 0 1999 1
  2 ; steps.py 2 2000 1 1 0 1999 1
  3 ; steps.py 10000 2000 15 600 25 800 0 840 25 1040 21
  3 ; steps.py 10000 2000 25 200 0 240 25 440 21
  3 ; steps.py 10000 2000 15 1360 25 1760 0 1800 25
  3 ; steps.py 9999 2000 15 600 25 800 0 840 25 1040 21
  3 ; steps.py 9999 2000 25 200 0 240 25 440 21
  3 ; steps.py 9999 2000 15 1360 25 1760 0 1800 25


[Subtask 3 - validators/st3.cpp]
  1 ; steps.py 30 1 42
  2 ; steps.py 1 1000000 0 999999 1
  2 ; steps.py 2 1000000 1 1 0 999999 1
  3 ; steps.py 100000 1000000 100 10 0 325000 2 350000 0 450000 2 475000 0 999990 100
  3 ; steps.py 100000 1000000 2 25000 0 125000 2 150000 0 699990 100 700000 0
  3 ; steps.py 100000 1000000 0 300000 100 300010 0 850000 2 875000 0 975000 2
  3 ; steps.py 99999 1000000 100 10 0 325000 2 350000 0 450000 2 475000 0 999990 100
  3 ; steps.py 99999 1000000 2 25000 0 125000 2 150000 0 699990 100 700000 0
  3 ; steps.py 99999 1000000 0 300000 100 300010 0 850000 2 875000 0 975000 2


